# Simple Nginx configuration for initial deployment and ACME challenges
# This configuration ensures nginx can start and handle Let's Encrypt verification

# HTTP server - always available for ACME challenges
server {
    listen 80;
    server_name _;
    
    # Root directory for static files and ACME challenges
    root /var/www/html;
    index index.html index.htm;
    
    # Certbot challenge - HIGHEST PRIORITY
    location /.well-known/acme-challenge/ {
        try_files $uri =404;
        # No caching for ACME challenges
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Health check endpoint
    location /up {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Main application logic
    location / {
        # Check if SSL certificate exists and redirect if available
        if (-f /etc/nginx/ssl/live/staging.teahour.dev/fullchain.pem) {
            return 301 https://$host$request_uri;
        }
        
        # If no SSL, serve content directly via HTTP
        try_files $uri @rails;
    }
    
    location @rails {
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
}

# HTTPS server - will be enabled after SSL certificates are obtained
# This server block is commented out until certificates are available
# server {
#     listen 443 ssl;
#     http2 on;
#     server_name _;
#     
#     # SSL configuration will be added here after certificates are obtained
#     # ssl_certificate /etc/nginx/ssl/live/staging.teahour.dev/fullchain.pem;
#     # ssl_certificate_key /etc/nginx/ssl/live/staging.teahour.dev/privkey.pem;
#     
#     # ... rest of HTTPS configuration
# }
